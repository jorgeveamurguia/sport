/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ArticuloGui.java
 *
 * Created on 11-mar-2010, 21:07:20
 */

package jorge.veamurguia.gui;
import java.awt.Component;

import java.awt.EventQueue;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.Beans;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import jorge.veamurguia.basededatos.GestorSql;
import jorge.veamurguia.entidad.Articulo;
import jorge.veamurguia.entidad.Categoria;
import jorge.veamurguia.entidad.LineaVenta;
import jorge.veamurguia.entidad.Venta;

import org.jdesktop.application.Application;

import sun.misc.Cleaner;

/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
/**
 *
 * @author jorge
 */
public class ArticuloGui extends JPanel  implements IIDCodigo, MouseListener ,IOpcionPulsada{
    
	IIDCodigo idcodigo;
	
	int opcionPulsada=-1;
	boolean filtro=false;
	
	//parametro recogido de la pantalla de categoria
	int GUI_idCatergoria=-1;
	String GUI_valorCatergoria=null;
	
	GestorSql sql;

	Articulo[] articulos;
	
	int ID_POSITION=0;
	int ARTICULO_POSITION=1;
	int CODIGO_POSITION=2;
	int CATEGORIA_POSITION=3;	
	int PRECIO_POSITION=4;
	
	
	
    public ArticuloGui() {
        initComponents();
		sql =GestorSql.getInstance();
		refresh();
    }
    
    public ArticuloGui(IIDCodigo codigo) {
    	this.idcodigo=codigo;
        initComponents();
		sql =GestorSql.getInstance();
		refresh();
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        masterScrollPane = new javax.swing.JScrollPane();
        {
        	TableModel jTable1Model = 
        		new DefaultTableModel(
        				new String[][] { { "One", "Two" }, { "Three", "Four" } },
        				new String[] { "Column 1", "Column 2" });
			jTable1 = new JTable();
        	masterScrollPane.setViewportView(jTable1);
        	jTable1.setPreferredSize(new java.awt.Dimension(401, 126));
        }
        //masterTable = new javax.swing.JTable();
        idLabel = new javax.swing.JLabel();
        articuloLabel = new javax.swing.JLabel();
        codigoLabel = new javax.swing.JLabel();
        IDCategoriaLabel = new javax.swing.JLabel();
        precioLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        articuloField = new javax.swing.JTextField();
        codigoField = new javax.swing.JTextField();
        IDCategoriaField = new javax.swing.JTextField();
        IDCategoriaField.setEditable(false);
        precioField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();


        masterScrollPane.setViewportView(jTable1);

        idLabel.setText("Id:");

        articuloLabel.setText("Articulo:");

        codigoLabel.setText("Codigo:");

        IDCategoriaLabel.setText("IDCategoria:");

        precioLabel.setText("Precio:");


        saveButton.setText("Salvar");
        {
        	findButton = new javax.swing.JButton();
        	findButton.setName("find");
        	findButton.setText("Seleccionar");
        	findButton.addActionListener(formListener);
        }
        {
        	clearButton= new javax.swing.JButton();
        	clearButton.setName("clean");
        	clearButton.setText("Limpiar");
        	clearButton.addActionListener(formListener);
        }

        
        {
        	jCheckBox1 = new JCheckBox();
        	jCheckBox1.setName("filter");
        	jCheckBox1.setText("Filtrar");
        	jCheckBox1.addActionListener(formListener);
        }
        jTable1.addMouseListener(this);
        
        saveButton.addActionListener(formListener);

        refreshButton.setText("Recarga");
        refreshButton.addActionListener(formListener);

        newButton.setText("AÃ±adir");
        newButton.addActionListener(formListener);

        deleteButton.setText("Borrar");


        deleteButton.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel)
                            .addComponent(articuloLabel)
                            .addComponent(codigoLabel)
                            .addComponent(IDCategoriaLabel)
                            .addComponent(precioLabel)
                            .addComponent(jCheckBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refreshButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton))
                            .addComponent(idField, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                            .addComponent(articuloField, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                            .addComponent(codigoField, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                            .addComponent(precioField, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(IDCategoriaField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton, refreshButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(articuloLabel)
                    .addComponent(articuloField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoLabel)
                    .addComponent(codigoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDCategoriaLabel)
                    .addComponent(IDCategoriaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precioLabel)
                    .addComponent(precioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(refreshButton)
                    .addComponent(deleteButton)
                    .addComponent(newButton)
                    .addComponent(jCheckBox1)
                    .addComponent(clearButton))
                .addContainerGap())
        );
        Application.getInstance().getContext().getResourceMap(getClass()).injectComponents(this);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                ArticuloGui.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                ArticuloGui.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                ArticuloGui.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                ArticuloGui.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == findButton) {
                ArticuloGui.this.findButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jCheckBox1) {
                ArticuloGui.this.filterButtonActionPerformed(evt);
            }
            else if (evt.getSource() == clearButton) {
                ArticuloGui.this.clearButtonActionPerformed(evt);
            }

        }
    }// </editor-fold>//GEN-END:initComponents

    public void refresh(){

    	Object[] objeto, objeto2;
    	Categoria categoria;
    	Articulo articulo= new Articulo();
    	if(filtro){
    		if(idField.getText().length()>0)
    			articulo.ID=Integer.parseInt(idField.getText());
    		if(articuloField.getText().length()>0)
    			articulo.Articulo=articuloField.getText();
    		if(codigoField.getText().length()>0)
        		articulo.Codigo=codigoField.getText();
    		if(GUI_idCatergoria!=-1){
        		articulo.ID_Categoria=new Categoria();
        		articulo.ID_Categoria.ID=GUI_idCatergoria;
    		}
    		
    	}
    	objeto=sql.find(articulo,filtro);
    	
    	System.out.print("Objetos encontrados"+objeto.length);
    	
    	articulos= new Articulo[objeto.length];
    	
    	String [] [] columns =new String[objeto.length][];
    	String [] results;
    	for(int i=0 ; i<objeto.length; i++){
    		
    		articulos[i] =(Articulo)objeto[i];
    		results =new String[5];
    		results[ID_POSITION]=""+articulos[i].ID;
    		results[CODIGO_POSITION]=articulos[i].Codigo;
    		results[ARTICULO_POSITION]=articulos[i].Articulo;
    		{
    			objeto2=sql.find(articulos[i].ID_Categoria,false);
    			articulos[i].ID_Categoria=(Categoria)objeto2[0];
    			results[CATEGORIA_POSITION]=articulos[i].ID_Categoria.Categoria;//
    		}
    		//results[3]=articulo.ID_Categoria.Categoria;//
    		results[PRECIO_POSITION]=articulos[i].precio+"";
				// TODO: handle exception
       		columns[i]= results;
    	}
    	//}
    	//results =new String[2];
    	//results[0]="dato1";
    	//results=new String[] { "dato1", "dato2" };
    	
    	//columns[0]=results;
		TableModel jTable1Model = 
			new DefaultTableModel(
					//new String[][] { { "dato1", "dato2" }, { "dato21", "dato22" } },
					columns ,
					new String[] { "ID", "Articulo","CÃ³digo","Categoria","Precio" });
		
		jTable1.setModel(jTable1Model);
    }

    @SuppressWarnings("unchecked")
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

        idField.setText("");
        articuloField.setText(""); 
        codigoField.setText(""); 
        IDCategoriaField.setText(""); 
        precioField.setText(""); ;
        GUI_idCatergoria=-1;
        GUI_valorCatergoria="";
    	
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

    	refresh();
    	
    }//GEN-LAST:event_refreshButtonActionPerformed
    @SuppressWarnings("unchecked")
    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
    	filtro=!filtro;
    	refresh();
    	
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    @SuppressWarnings("unchecked")
    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

    		final IIDCodigo codigo=this;
            
            Runnable otroHilo=new Runnable() {
                public void run() {
                    JFrame frame = new JFrame();
                    frame.setContentPane(new CategoriaGui(codigo));
                    frame.pack();
                    frame.setVisible(true);
                }
            };
            EventQueue.invokeLater(otroHilo);
    	
    	refresh();
    	
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

    	int response=0;
    	int selected = jTable1.getSelectedRows()[0];
    	
    	Venta venta=new Venta();
    	
    	LineaVenta lineaventa=new LineaVenta();
    	
    	lineaventa.ID_Articulo=articulos[selected];
    	
    	//devuelve todas las compras realizadas con este articulo.
        Object objetos[] = sql.find(lineaventa);//devuelve todos los articulos relacionados con categoria ID

                	
        if(objetos.length>0){
        	/*JFrame frame = new JFrame();
	  		MessageGui inst = new MessageGui(frame,this,"Quiere borrar todos los articulos \nrelacionados con esta categoria",true,true);
	  		inst.setVisible(true);*/
        	response= JOptionPane.showConfirmDialog(this, 
        			"Quiere borrar todas las ventas relacionadas con este articulo", 
        			"Borrar Articulo",  JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        }
        if(response==JOptionPane.YES_OPTION){

        	               
            for (Object lin :objetos ){
            	lineaventa=(LineaVenta)lin;
            	
            	sql.borrar(lineaventa.ID_Venta);//borra las ventas de cada linea
    	        sql.borrar(lineaventa);//borra las linea

            }


        	//articulo.ID=id;
	        sql.borrar(articulos[selected]);
	        //si hay una categoria vinculada a un articulo no se puede borrar 
	        //o preguntar si se quiere borrar todos los articulos relacionados
	        refresh();
        }
    
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed

    
    	Articulo articulo=new Articulo();
    	try {
    		if(idField.getText().length()!=0)
    			articulo.ID=Integer.parseInt(idField.getText());
    		articulo.Codigo=codigoField.getText();
    		articulo.ID_Categoria=new Categoria();
    		if(GUI_idCatergoria==-1){
            	JOptionPane.showConfirmDialog(this, 
            			"No existe la categoria", 
            			"Seleccione una categoria",  JOptionPane.CLOSED_OPTION);
            	return;
    		}
    		articulo.ID_Categoria.Categoria=GUI_valorCatergoria;
    		articulo.ID_Categoria.ID=GUI_idCatergoria;
    		articulo.Articulo=articuloField.getText();
    		articulo.precio=Float.parseFloat(precioField.getText());
    		
    		

        if( ! sql.crear(articulo)){
      		
        	JOptionPane.showConfirmDialog(this, 
        			"No es un codigo numero vÃ¡lido el ID", 
        			"Error al insertar datos",  JOptionPane.CLOSED_OPTION);
      		/*MessageGui inst = new MessageGui(new JFrame(),this,"No es un codigo numero vÃ¡lido el ID",false,true);
      		inst.setVisible(true);*/
          }
    	}catch(NumberFormatException ex){
    	 //   if( ! sql.crear(articulo)){
    	  		/*JFrame frame = new JFrame();
    	  		MessageGui inst = new MessageGui(frame,this,"error al crear el articulo",false,true);
    	  		inst.setVisible(true);*/
    			JOptionPane.showConfirmDialog(this, 
        			"Error al crear el articulo", 
        			"Error al insertar datos",  JOptionPane.CLOSED_OPTION);

    	  //    }    		
    	}
    	refresh();   		
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

    	Articulo articulo=new Articulo();
        
    	articulo.ID=Integer.parseInt(idField.getText());
        if(codigoField.getText().length()>=0)
        	articulo.Codigo=codigoField.getText();
        if(precioField.getText().length()>=0)
        	articulo.precio=Float.parseFloat(precioField.getText());
        if(articuloField.getText().length()>=0)
        	articulo.Articulo=articuloField.getText();
        //if(IDCategoriaField.getText().compareTo(GUI_valorCatergoria)==0)	{
	        articulo.ID_Categoria=new Categoria();	    	
	    	articulo.ID_Categoria.ID=GUI_idCatergoria;
        

    	
        if(articuloField.getText().length()>=0)
        	articulo.Articulo=articuloField.getText();

   	    if( ! sql.update(articulo)){
	  		JFrame frame = new JFrame();
	  		MessageGui inst = new MessageGui(frame,this,"error al actualizar el articulo",false,true);
	  		inst.setVisible(true);

	      }    		
   	    refresh();
   	 
    }//GEN-LAST:event_saveButtonActionPerformed
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDCategoriaField;
    private javax.swing.JLabel IDCategoriaLabel;
    private javax.swing.JTextField articuloField;
    private javax.swing.JLabel articuloLabel;
    private javax.swing.JTextField codigoField;
    private javax.swing.JLabel codigoLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JScrollPane masterScrollPane;
    //private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField precioField;
    private javax.swing.JLabel precioLabel;
    private JCheckBox jCheckBox1;
    private JButton clearButton;
    private JButton findButton;
    private JTable jTable1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new ArticuloGui());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }


	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub

		
	      int selected = jTable1.getSelectedRows()[0];

	        articuloField.setText(articulos[selected].Articulo);
	        idField.setText(articulos[selected].ID+"");
	        codigoField.setText(articulos[selected].Codigo+"");
	        IDCategoriaField.setText(articulos[selected].ID_Categoria.Categoria+"");
	        GUI_idCatergoria=articulos[selected].ID_Categoria.ID;
	        GUI_valorCatergoria=articulos[selected].ID_Categoria.Categoria;
	        precioField.setText(articulos[selected].precio+"");

        if (idcodigo!=null){
        	idcodigo.setCodigo(Integer.parseInt(idField.getText()),articuloField.getText());
        }
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setOpcion(int opcion) {
		// TODO Auto-generated method stub
		opcionPulsada=opcion;
	}

	@Override
	public int getOpcion() {
		// TODO Auto-generated method stub
		return opcionPulsada;
	}

	@Override
	public int getIDCodigo() {
		// TODO Auto-generated method stub
		return GUI_idCatergoria;
	}

	@Override
	public String getIDValor() {
		// TODO Auto-generated method stub
		return GUI_valorCatergoria;
	}

	@Override
	public void setCodigo(int codigo, String valor) {
		// TODO Auto-generated method stub
		System.out.print("recogo");
		if(valor==null)
		{
			IDCategoriaField.setText("");
		}else
			IDCategoriaField.setText(valor);
		GUI_idCatergoria=codigo;
		GUI_valorCatergoria=valor;
	}


}
