/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewMasterDetailForm2.java
 *
 * Created on 08-mar-2010, 20:11:49
 */

package jorge.veamurguia.gui;

import java.awt.EventQueue;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Calendar;

import javax.swing.GroupLayout;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.LayoutStyle;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import jorge.veamurguia.basededatos.GestorSql;
import jorge.veamurguia.entidad.Cliente;
import jorge.veamurguia.entidad.LineaVenta;
import jorge.veamurguia.entidad.Personal;
import jorge.veamurguia.entidad.Venta;


/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
/**
 *
 * @author jorge
 */
public class VentaGui extends JPanel implements IIDCodigo,IIDFiltroVenta, MouseListener ,IOpcionPulsada{

	
	private JTable jTable1;
	IIDCodigo idcodigo;
	
	int opcionPulsada=-1;
	boolean filtro=false;
	
	int ventanaLlamada=0;
	final int ventanaCliente=1;
	final int ventanaPersonal=2;
	final int ventanaLineaVenta=3;
	
	//parametro recogido de la pantalla de categoria
	int GUI_idPersonal=-1;
	String GUI_valorPersonal=null;

	int GUI_idCliente=-1;
	String GUI_valorCliente=null;

	GestorSql sql;

	Venta[] ventas;
//"ID","Fecha", "Personal","Cliente","precio"	
	final int ID_POSITION=0;
	final int FECHA_POSITION=1;
	final int PERSONAL_POSITION=2;
	final int CLIENTE_POSITION=3;	
	final int PRECIO_POSITION=4;

	
    public VentaGui() {
        initComponents();

        sql =GestorSql.getInstance();
		refresh();

    }
    
    public VentaGui(IIDCodigo codigo) {
    	idcodigo=codigo;
        initComponents();

        sql =GestorSql.getInstance();
		refresh();
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

    	masterScrollPane = new javax.swing.JScrollPane();
    	{
    		TableModel jTable1Model = 
    			new DefaultTableModel(
    					new String[][] { { "One", "Two" }, { "Three", "Four" } },
    					new String[] { "Column 1", "Column 2" });
    		jTable1 = new JTable();
    		masterScrollPane.setViewportView(jTable1);
    		jTable1.setModel(jTable1Model);
    	}
        fechaLabel = new javax.swing.JLabel();
        precioLabel = new javax.swing.JLabel();
        fechaField = new javax.swing.JTextField();
        precioField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        ID_Persiona = new javax.swing.JLabel();
        clienteField = new javax.swing.JTextField();
        clienteButton = new javax.swing.JButton();
        personalLabel = new javax.swing.JLabel();
        personaField = new javax.swing.JTextField();
        lineaVentaButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        personalButton = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();

        FormListener formListener = new FormListener();


        masterScrollPane.setViewportView(jTable1);
        
        jTable1.addMouseListener(this);

        //fechaField.setEnabled(false);
        fechaLabel.setText("Fecha:");

        precioLabel.setText("Precio:");


        saveButton.setText("Salvar");
        saveButton.addActionListener(formListener);

        refreshButton.setText("Recargar");
        refreshButton.addActionListener(formListener);

        newButton.setText("AÃ±adir");
        newButton.addActionListener(formListener);

        deleteButton.setText("Borrar");


        deleteButton.addActionListener(formListener);

        ID_Persiona.setText("Cliente");

        clienteField.setEditable(false);

        clienteButton.setText("Seleccionar");
        clienteButton.addActionListener(formListener);
        
        personalLabel.setText("Personal");

        personaField.setEditable(false);

        lineaVentaButton.setText("Venta");
        lineaVentaButton.addActionListener(formListener);
        
        clearButton.setText("limpiar");
        clearButton.addActionListener(formListener);

        jCheckBox1.setText("Filtrar");
        jCheckBox1.addActionListener(formListener);

        personalButton.setText("Seleccionar");
        personalButton.addActionListener(formListener);

        idLabel.setText("ID");
        fechaField.setEditable(false);
       // idField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setVerticalGroup(layout.createSequentialGroup()
        	.addContainerGap()
        	.addComponent(masterScrollPane, GroupLayout.PREFERRED_SIZE, 113, GroupLayout.PREFERRED_SIZE)
        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, Short.MAX_VALUE)
        	.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
        	    .addComponent(idField, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(idLabel, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
        	.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
        	    .addComponent(personalButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(personaField, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(personalLabel, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
        	.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
        	    .addComponent(fechaField, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(fechaLabel, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
        	.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
        	    .addComponent(precioField, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(lineaVentaButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(precioLabel, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
        	.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
        	    .addComponent(clienteField, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(clienteButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(ID_Persiona, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
        	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
        	.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
        	    .addComponent(clearButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(jCheckBox1, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(newButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(deleteButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(refreshButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	    .addComponent(saveButton, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
        	.addContainerGap());
        layout.setHorizontalGroup(layout.createSequentialGroup()
        	.addContainerGap()
        	.addGroup(layout.createParallelGroup()
        	    .addGroup(layout.createSequentialGroup()
        	        .addGroup(layout.createParallelGroup()
        	            .addComponent(personalLabel, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	            .addComponent(jCheckBox1, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(ID_Persiona, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	                .addGap(12))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(precioLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	                .addGap(12))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(fechaLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	                .addGap(13))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(idLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
        	                .addGap(43)))
        	        .addGap(18)
        	        .addGroup(layout.createParallelGroup()
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(clearButton, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
        	                .addComponent(newButton, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
        	                .addGap(16)
        	                .addComponent(deleteButton, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
        	                .addComponent(refreshButton, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(clienteField, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(precioField, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(fechaField, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(personaField, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
        	            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
        	                .addComponent(idField, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE)
        	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))
        	        .addGap(15)
        	        .addGroup(layout.createParallelGroup()
        	            .addComponent(saveButton, GroupLayout.Alignment.LEADING, 0, 105, Short.MAX_VALUE)
        	            .addGroup(layout.createSequentialGroup()
        	                .addGap(0, 0, Short.MAX_VALUE)
        	                .addComponent(clienteButton, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE))
        	            .addGroup(layout.createSequentialGroup()
        	                .addGap(0, 0, Short.MAX_VALUE)
        	                .addComponent(lineaVentaButton, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE))
        	            .addGroup(layout.createSequentialGroup()
        	                .addGap(0, 0, Short.MAX_VALUE)
        	                .addComponent(personalButton, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE))))
        	    .addComponent(masterScrollPane, GroupLayout.Alignment.LEADING, 0, 573, Short.MAX_VALUE))
        	.addContainerGap());
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                VentaGui.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                VentaGui.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                VentaGui.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                VentaGui.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == clearButton) {
                VentaGui.this.clearButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jCheckBox1) {
                VentaGui.this.jCheckBox1ActionPerformed(evt);
            }
            else if (evt.getSource() == personalButton) {
                VentaGui.this.personalButtonActionPerformed(evt);
            }
            else if (evt.getSource() == clienteButton) {
                    VentaGui.this.clienteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == lineaVentaButton) {
                VentaGui.this.lineaVentaButtonActionPerformed(evt);
        }

        }

    }// </editor-fold>//GEN-END:initComponents
    public void refresh(){

    	Object[] objeto, objeto2;

    	Venta venta= new Venta();
    	if(filtro){
    		System.out.print("FIltro activo");
    		if(idField.getText().length()>0)
    			venta.ID=Integer.parseInt(idField.getText());
    		if(GUI_idPersonal!=-1){
        		venta.ID_Personal=new Personal();
        		venta.ID_Personal.ID=GUI_idPersonal;
    		}
    		if(GUI_idCliente!=-1){
    			venta.ID_Cliente=new Cliente();
    			venta.ID_Cliente.ID=GUI_idCliente;
    		}

    		
    	}
    	objeto=sql.find(venta,filtro);
    	
    	System.out.print("Objetos encontrados"+objeto.length);
    	
    	ventas= new Venta[objeto.length];
    	
    	String [] [] columns =new String[objeto.length][];
    	String [] results;
    	for(int i=0 ; i<objeto.length; i++){
    		
    		ventas[i] =(Venta)objeto[i];
    		results =new String[5];
    		results[ID_POSITION]=""+ventas[i].ID;
    		results[FECHA_POSITION]=ventas[i].Fecha.toString();
    		//results[ARTICULO_POSITION]=ventas[i].Articulo;
    		{
    			objeto2=sql.find(ventas[i].ID_Personal,false);
    			ventas[i].ID_Personal=(Personal)objeto2[0];
    			results[PERSONAL_POSITION]=ventas[i].ID_Personal.Nombre;//
    		}
    		{
    			objeto2=sql.find(ventas[i].ID_Cliente,false);
    			ventas[i].ID_Cliente=(Cliente)objeto2[0];
    			results[CLIENTE_POSITION]=ventas[i].ID_Cliente.Nombre 
    			+"-"+ ventas[i].ID_Cliente.Apellidos;//
    		}

    		//results[3]=articulo.ID_Categoria.Categoria;//
    		//results[PRECIO_POSITION]=ventas[i].Cantidad+"";
    		results[PRECIO_POSITION]=ventas[i].Precio+"";
				// TODO: handle exception
       		columns[i]= results;
    	}
    	//}
    	//results =new String[2];
    	//results[0]="dato1";
    	//results=new String[] { "dato1", "dato2" };
    	
    	//columns[0]=results;
		TableModel jTable1Model = 
			new DefaultTableModel(
					//new String[][] { { "dato1", "dato2" }, { "dato21", "dato22" } },
					columns ,
					new String[] { "ID","Fecha", "Personal","Cliente","precio"});
		
		jTable1.setModel(jTable1Model);
    }

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
		refresh();

    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

    	
    	int selected = jTable1.getSelectedRows()[0];
    	Venta venta=ventas[selected];
    	//int id=Integer.parseInt(jTable1.getModel().getValueAt(selected, 0).toString());

        LineaVenta lineaVenta=new LineaVenta();
        lineaVenta.ID_Venta= venta;
        
        Object objetos[] = sql.find(lineaVenta);//devuelve todos los articulos relacionados con categoria ID

        if(objetos.length>0){
        	JFrame frame = new JFrame();
	  		MessageGui inst = new MessageGui(frame,this,"Quiere borrar todas las lineas de venta",true,true);
	  		inst.setVisible(true);
        }
        if(getOpcion()==IOpcionPulsada.OPCION_PULSADA_ACEPTAR){

        	sql.borrar(lineaVenta);
	        sql.borrar(venta);
	        //si hay una categoria vinculada a una lliena venta o no se puede borrar 
	        //o preguntar si se quiere borrar todos las lineas relacionados
	        refresh();
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        
    	Venta venta=new Venta();
    	try {
    		if(idField.getText().length()>0)
    			venta.ID=Integer.parseInt(idField.getText());

    		Calendar c1 = Calendar.getInstance();

			
    		fechaField.setText(
    				c1.get(Calendar.YEAR)+"-"+
    				c1.get(Calendar.MONTH)+"-"+
    				c1.get(Calendar.DATE)
    				);        		

    		venta.Fecha=fechaField.getText();

            venta.ID_Cliente=new Cliente();
            venta.ID_Cliente.ID=GUI_idCliente;

            venta.ID_Personal=new Personal();
            venta.ID_Personal.ID=GUI_idPersonal;

            if(precioField.getText().length()>0)
            	venta.Precio=Float.parseFloat(precioField.getText());
    		
    		

        if( ! sql.crear(venta)){
      		
      		MessageGui inst = new MessageGui(new JFrame(),this,"No es un codigo numero vÃ¡lido el ID",false,true);
      		inst.setVisible(true);
          }
    	}catch(NumberFormatException ex){
    	 //   if( ! sql.crear(articulo)){
    	  		JFrame frame = new JFrame();
    	  		MessageGui inst = new MessageGui(frame,this,"error al crear la venta",false,true);
    	  		inst.setVisible(true);

    	  //    }    		
    	}
    	refresh();   		
    }//GEN-LAST:event_newButtonActionPerformed
 
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
    
    	Venta venta=new Venta();
        
    	venta.ID=Integer.parseInt(idField.getText());
    			
        		Calendar c1 = Calendar.getInstance();
    			
        		fechaField.setText(
        				c1.get(Calendar.YEAR)+"-"+
        				c1.get(Calendar.MONTH)+"-"+
        				c1.get(Calendar.DATE)
        				);        		

        		venta.Fecha=fechaField.getText();

        venta.Precio=new Float(precioField.getText());
        venta.ID_Cliente=new Cliente();
        venta.ID_Cliente.ID=GUI_idCliente;

        venta.ID_Personal=new Personal();
        venta.ID_Personal.ID=GUI_idPersonal;

   	    if( ! sql.update(venta)){
	  		JFrame frame = new JFrame();
	  		MessageGui inst = new MessageGui(frame,this,"error al actualizar la venta",false,true);
	  		inst.setVisible(true);

	      }    		
   	    refresh();

    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed

    	idField.setText("");
        fechaField.setText("");
        precioField.setText("");
        
        
        GUI_idCliente=-1;//null;//ventas[selected].ID_Cliente.ID;
        GUI_valorCliente=null;
        clienteField.setText("");
        
        GUI_idPersonal=-1;
        GUI_valorPersonal=null;

        personaField.setText("");

        precioField.setText("");

        
        
    }//GEN-LAST:event_clearButtonActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    	filtro=!filtro;
    	refresh();

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void personalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalButtonActionPerformed
       
    	ventanaLlamada=ventanaPersonal;
    	
		final IIDCodigo codigo=this;
        
        Runnable otroHilo=new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new PersonalGui(codigo));
                frame.pack();
                frame.setVisible(true);
            }
        };
        EventQueue.invokeLater(otroHilo);
	
	refresh();

  	// TODO add your handling code here:
    }//GEN-LAST:event_clienteButtonActionPerformed

    private void clienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalButtonActionPerformed

    	ventanaLlamada=ventanaCliente;
    	
		final IIDCodigo codigo=this;
        
        Runnable otroHilo=new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new ClienteGui(codigo));
                frame.pack();
                frame.setVisible(true);
            }
        };
        EventQueue.invokeLater(otroHilo);
	
	refresh();

    	// TODO add your handling code here:
    }//GEN-LAST:event_clienteButtonActionPerformed

	private void lineaVentaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalButtonActionPerformed

		ventanaLlamada=ventanaLineaVenta;
		
		final IIDFiltroVenta codigo=this;
	    
	    Runnable otroHilo=new Runnable() {
	        public void run() {
	            JFrame frame = new JFrame();
	            frame.setContentPane(new LineaVentaGui(codigo));
	            frame.pack();
	            frame.setVisible(true);
	        }
	    };
	    EventQueue.invokeLater(otroHilo);
	
		refresh();
	
		// TODO add your handling code here:
	}//GEN-LAST:event_clienteButtonActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID_Persiona;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clienteButton;
    private javax.swing.JTextField clienteField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField fechaField;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JButton lineaVentaButton;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField personaField;
    private javax.swing.JButton personalButton;
    private javax.swing.JLabel personalLabel;
    private javax.swing.JTextField precioField;
    private javax.swing.JLabel precioLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;

    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new VentaGui());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

	@Override
	public int getIDCodigo() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getIDValor() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setCodigo(int codigo, String valor) {
		// TODO Auto-generated method stub
		switch(ventanaLlamada){
			case ventanaCliente:
			{
				if(valor==null)
				{
					clienteField.setText("");
				}else
					clienteField.setText(valor);
				
				GUI_idCliente=codigo;
				GUI_valorCliente=valor;

				break;
			}
			case ventanaPersonal:
			{
				if(valor==null)
				{
					personaField.setText("");
				}else
					personaField.setText(valor);
				GUI_idPersonal=codigo;
				GUI_valorPersonal=valor;

				break;
			}
				
		}		
	}

	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub

		int selected = jTable1.getSelectedRows()[0];

        idField.setText(ventas[selected].ID+"");
        fechaField.setText(ventas[selected].Fecha.toString());
        precioField.setText(ventas[selected].Precio+"");
        
        
        GUI_idCliente=ventas[selected].ID_Cliente.ID;
        GUI_valorCliente=ventas[selected].ID_Cliente.Nombre+"-"+ventas[selected].ID_Cliente.Apellidos;

        clienteField.setText(GUI_valorCliente);
        
        GUI_idPersonal=ventas[selected].ID_Personal.ID;
        GUI_valorPersonal=ventas[selected].ID_Personal.Nombre+""+ventas[selected].ID_Personal.Apellidos;

        personaField.setText(GUI_valorPersonal);

        precioField.setText(ventas[selected].Precio+"");
        if (idcodigo!=null){
        	idcodigo.setCodigo(Integer.parseInt(idField.getText()),idField.getText());
        }

		
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getOpcion() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setOpcion(int opcion) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getIDVenta() {
		// TODO Auto-generated method stub
		return Integer.parseInt(idField.getText());
	}

	@Override
	public void getPrecioTotal(Float precio) {
		precioField.setText(precio+"");
		// TODO Auto-generated method stub
		
	}

}
